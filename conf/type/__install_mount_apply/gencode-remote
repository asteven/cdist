#!/bin/sh
#
# 2011 Steven Armstrong (steven-cdist at armstrong.cc)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

die() {
   echo "[__install_mount_apply] $@" >&2
   exit 1 
}

cat << DONE
output_if_debug() {
   if [ "$__debug" = "yes" ]; then
      cat
   fi
}
DONE

get_type_from_mkfs() {
   _device="$1"
   for mkfs_object in $(find "$__global/object/__install_mkfs" -path "*.cdist"); do
      mkfs_device="$(cat "$mkfs_object/parameter/device")"
      if [ "$_device" = "$mkfs_device" ]; then
         cat "$mkfs_object/parameter/type"
         break
      fi
   done
   unset _device
   unset mkfs_device
   unset mkfs_object
}

get_objects() {
   objects_file=$(mktemp)
   for object in $(find "$__global/object/__install_mount" -path "*.cdist"); do
      object_dir="$(cat "$object/parameter/dir")"
      echo "$object_dir $object" >> $objects_file
   done
   sort -k 1,1 $objects_file | cut -d' ' -f 2
   rm $objects_file
   unset objects_file
   unset object
   unset object_dir
}

objects=$(get_objects)
for object in $objects; do
   device="$(cat "$object/parameter/device")"
   dir="$(cat "$object/parameter/dir")"
   prefix="$(cat "$object/parameter/prefix")"
   if [ -f "$__object/parameter/type" ]; then
      type="$(cat "$object/parameter/type")"
   else
      type="$(get_type_from_mkfs "$device")"
      # store for later use in __install_fstab
      echo "$type" > "$object/parameter/type"
   fi
   [ -n "$type" ] || die "Can't determine type for $object"
   if [ "$type" = "swap" ]; then
      echo "swapon \"$device\""
   else
      if [ -f "$__object/parameter/options" ]; then
         options="$(cat "$object/parameter/options")"
      else
         options=""
      fi
      [ -n "$options" ] && options="-o $options"
      mount_point="${prefix}${dir}"

      echo "[ -d \"$mount_point\" ] || mkdir -p \"$mount_point\""
      # let mount figure out the filesystem type
      echo "mount $options \"$device\" \"$mount_point\" | output_if_debug"
   fi
done
